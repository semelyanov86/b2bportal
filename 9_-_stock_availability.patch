Index: database/migrations/2019_06_14_201836_create_storages_table.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- database/migrations/2019_06_14_201836_create_storages_table.php	(date 1560534100000)
+++ database/migrations/2019_06_14_201836_create_storages_table.php	(date 1560534100000)
@@ -0,0 +1,32 @@
+<?php
+
+use Illuminate\Support\Facades\Schema;
+use Illuminate\Database\Schema\Blueprint;
+use Illuminate\Database\Migrations\Migration;
+
+class CreateStoragesTable extends Migration
+{
+    /**
+     * Run the migrations.
+     *
+     * @return void
+     */
+    public function up()
+    {
+        Schema::create('storages', function (Blueprint $table) {
+            $table->bigIncrements('id');
+            $table->string('name');
+            $table->timestamps();
+        });
+    }
+
+    /**
+     * Reverse the migrations.
+     *
+     * @return void
+     */
+    public function down()
+    {
+        Schema::dropIfExists('storages');
+    }
+}
Index: app/ProductCount.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/ProductCount.php	(date 1560534610000)
+++ app/ProductCount.php	(date 1560534610000)
@@ -0,0 +1,13 @@
+<?php
+
+namespace FleetCart;
+
+use Illuminate\Database\Eloquent\Model;
+
+class ProductCount extends Model
+{
+    public function storage()
+    {
+        return $this->belongsTo('FleetCart\Storage');
+    }
+}
Index: database/migrations/2019_06_14_203805_create_product_counts_table.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- database/migrations/2019_06_14_203805_create_product_counts_table.php	(date 1560534301000)
+++ database/migrations/2019_06_14_203805_create_product_counts_table.php	(date 1560534301000)
@@ -0,0 +1,36 @@
+<?php
+
+use Illuminate\Support\Facades\Schema;
+use Illuminate\Database\Schema\Blueprint;
+use Illuminate\Database\Migrations\Migration;
+
+class CreateProductCountsTable extends Migration
+{
+    /**
+     * Run the migrations.
+     *
+     * @return void
+     */
+    public function up()
+    {
+        Schema::create('product_counts', function (Blueprint $table) {
+            $table->increments('id');
+            $table->bigInteger('storage_id')->unsigned()->nullable();
+            $table->integer('product_id')->unsigned();
+            $table->float('quantity');
+            $table->timestamps();
+            $table->foreign('storage_id')->references('id')->on('storages')->onDelete('cascade');
+            $table->foreign('product_id')->references('id')->on('products')->onDelete('cascade');
+        });
+    }
+
+    /**
+     * Reverse the migrations.
+     *
+     * @return void
+     */
+    public function down()
+    {
+        Schema::dropIfExists('product_counts');
+    }
+}
Index: Modules/Product/Entities/Product.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Modules/Product/Entities/Product.php	(date 1560520323000)
+++ Modules/Product/Entities/Product.php	(date 1560534748000)
@@ -560,4 +560,9 @@
     {
         return ['name'];
     }
+
+    public function productCount()
+    {
+        return $this->hasMany('FleetCart\ProductCount');
+    }
 }
Index: Modules/Product/Http/Controllers/ProductController.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Modules/Product/Http/Controllers/ProductController.php	(date 1560520323000)
+++ Modules/Product/Http/Controllers/ProductController.php	(date 1560535582000)
@@ -70,6 +70,7 @@
         $relatedProducts = $product->relatedProducts()->forCard()->get();
         $upSellProducts = $product->upSellProducts()->forCard()->get();
         $reviews = $this->getReviews($product);
+        $counts = $product->productCount()->with('storage')->get();
 
         if (setting('reviews_enabled')) {
             $product->load('reviews:product_id,rating');
@@ -77,7 +78,7 @@
 
         event(new ProductViewed($product));
 
-        return view('public.products.show', compact('product', 'relatedProducts', 'upSellProducts', 'reviews'));
+        return view('public.products.show', compact('product', 'relatedProducts', 'upSellProducts', 'reviews', 'counts'));
     }
 
     /**
Index: app/Storage.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Storage.php	(date 1560533916000)
+++ app/Storage.php	(date 1560533916000)
@@ -0,0 +1,10 @@
+<?php
+
+namespace FleetCart;
+
+use Illuminate\Database\Eloquent\Model;
+
+class Storage extends Model
+{
+    //
+}
Index: Themes/Storefront/views/public/products/partials/product/details.blade.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Themes/Storefront/views/public/products/partials/product/details.blade.php	(date 1560520323000)
+++ Themes/Storefront/views/public/products/partials/product/details.blade.php	(date 1560535789000)
@@ -24,8 +24,12 @@
         <div class="availability pull-left">
             <label>{{ trans('storefront::product.availability') }}:</label>
 
-            @if ($product->in_stock)
-                <span class="in-stock">{{ trans('storefront::product.in_stock') }}</span>
+            @if ($counts->count() > 0)
+                <ul>
+                    @foreach($counts as $count)
+                        <li>{{$count->storage->name}} - {{$count->quantity}}</li>
+                    @endforeach
+                </ul>
             @else
                 <span class="out-of-stock">{{ trans('storefront::product.out_of_stock') }}</span>
             @endif
Index: Themes/Storefront/views/public/products/show.blade.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Themes/Storefront/views/public/products/show.blade.php	(date 1560520323000)
+++ Themes/Storefront/views/public/products/show.blade.php	(date 1560535286000)
@@ -30,6 +30,10 @@
                         <li class="{{ request()->has('reviews') || review_form_has_error($errors) ? '' : 'active' }}">
                             <a data-toggle="tab" href="#description">{{ trans('storefront::product.tabs.description') }}</a>
                         </li>
+                        <h1>counts</h1>
+                        @foreach($product->productCount() as $count)
+                            <p>{{$count->quantity}}</p>
+                        @endforeach
 
                         @if ($product->hasAnyAttribute())
                             <li>
